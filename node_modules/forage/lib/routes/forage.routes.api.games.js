var APIGamesRoutes,
    Q           = require('q');

(function () {
    "use strict";
    
    // Setup a local variable for the Forage reference
    var Forage = null;
    
    APIGamesRoutes = function () {
        
        // Setup the JSON response variable that will contain our class
        var JSONResponse = null;
        
        // Setup the local variable upon loading the module
        this.initialize = function () {
            
            // Need to go 2 levels up since this is a sub-module of the HTTPServer
            Forage = module.parent.parent.exports;
            
            // Stand-alone JSON response class
            JSONResponse = require('../classes/forage.response');
            
        };

        /***!List active games
         *  GET /api/games
         * @return  Array   An array of all the active games and their lanterns
         *
         * Note:    Games list method will likely change in the future to only
         *          show basic game details and not arrays of sub-objects.
         */
        this.listActive = function (request, response) {
            
            // Create the response object
            response = new JSONResponse(request, response);
            
            // Set the result to be simply the array of games
            Forage.games.listAll()
                .then(function (activeGames) {
                    // Render the JSON response W00T! Simplest one...
                    response.result = activeGames;
                    response.render();
                }, console.log);
        }
        
        /***!Retrieve specific game(s)
         *  GET /api/games/:_ids
         * @params  String:_ids     The requested ID(s)
         * @return  Array   An array of matching active games and their lanterns
         *
         * Note:    Games list method will likely change in the future to only
         *          show basic game details and not arrays of sub-objects.
         *          The full game data will only be return when joining a game.
         */
        this.getById = function (request, response) {
        
            // Create the response object
            response = new JSONResponse(request, response);
            
            // Set the result to the array returned in the games model find method
            response.result = Forage.games.findById(request.params._id);
            
            // Render the JSON response
            response.render();
        };
        
        this.join = function (request, response) {
            
            response = new JSONResponse(request, response);
            
            Forage.games.leaveCurrent(request.session.player)
                .then(function () {
                    return Forage.games.join(request.session.player, request.params._id);
                }, response.errorResponse)
                .then(function () {
                    response.result = Forage.games.findById(request.params._id);
                    response.render();
                });
            
        };
        
        this.initialize();
        
    };
    
    APIGamesRoutes = new APIGamesRoutes();
    
}());

module.exports = APIGamesRoutes;
var HTTPRoutes,
    Q           = require('q');

(function () {
    "use strict";
    
    // Setup a local variable for the FoodLantern reference
    var FoodLantern = null;
    
    HTTPRoutes = function () {
        
        // Setup the local variable upon loading the module
        this.initialize = function () {
            
            // Need to go 2 levels up since this is a sub-module of the HTTPServer
            FoodLantern = module.parent.parent.exports;
            
        };
        
        /***!API Documentation page
         *  "/"
         *  Base route that shows the documentation of the API.
         */
        this.primaryIndex = function (request, response) {

            // Create the variable data object
            var data = {
                // Logged in player data or null
                player      : request.session.player
            };
            
            FoodLantern.HTTPServer.router.set('partials', {body: "documentation"});            
            response.render('documentation', data);
        };
        
        /***!Login Page
         *  GET "/login"
         * Login form for players to validate their credentials.
         */
        this.login = function (request, response) {

            // Create the variable data object
            var data = {
                // Logged in player data or null
                player      : request.session.player,
                // Session error or null
                loginError  : request.session.loginError
            };
            
            // Remove the login error if it was set
            delete request.session.loginError;
            
            // Load the view
            FoodLantern.HTTPServer.router.set('partials', {body: "login"});
            
            // Render the response
            response.render('login', data);
        };
        
        /***!Logout Page
         *  ALL "/logout"
         * Kills the current session and redirects back to the login.
         */
        this.logout = function (request, response) {
            delete request.session.player;
            
            // Redirect to the login page
            response.location('/login');
			response.redirect('/login');
        };
        
        /***!Registration Page
         *  GET "/register"
         * Registration for for players to sign-up for having fun.
         */
        this.register = function (request, response) {
            
            var data = {
                // Logged in player data or null
                player      : request.session.player,
                // Session error or null
                loginError  : request.session.loginError
            };
            
            // Remove the login error if it was set
            delete request.session.loginError;
            
            // Load the view
            FoodLantern.HTTPServer.router.set('partials', {body: "register"});

            // Render the response
            response.render('register', data);
            
        };
        
        /***!Player Dashboard
         *  GET "/dashboard"
         * Location for logged in players to see their current
         * stats and game breakdown.
         * Attempted access without valid credentials will redirect
         * visitors to the login page.
         */
        this.dashboard = function (request, response) {

//****************************************************************//
//      VERY INSECURE! DO NOT DO THIS ONLY ON ANYTHING IMPORTANT
//****************************************************************//
            // Ensure that the player is logged in
            if (!request.session.player) {
                response.location('/login');
    			response.redirect('/login');
            }
//****************************************************************//
            
            // Create the variable data object
            var data = {
                // Logged in player data or null
                player      : request.session.player
            };
            
            // Load the view
            FoodLantern.HTTPServer.router.set('partials', {body: "dashboard"});
            
            // Render the response
            response.render('dashboard', data);
            
        };
        
        /***!Process Login Attempt
         *  POST "/login"
         * Verify the player's credentials to that on record.
         * Valid players will be redirected to their login upon
         * successful session being created.
         * Invalid players will be redirected to the login page
         * with a generic "Invalid username or password" message.
         */
        this.loginAttempt = function (request, response) {
            
            // Verify the user credentials using the players model 
            FoodLantern.players.validateCredentials(request.body.email, request.body.password)
                // Valid credentials will continue through the first promise
                .then(function (validPlayer) {
                
                    // Remove the password variable for all cases
                    delete validPlayer.password;
                    
                    // Create the player object (used for future case where player is stored locally when over socket)
					FoodLantern.players.create(validPlayer)
					    .then(function (player){
					        
					        // Create new player session
					        FoodLantern.players.createSession(request, player)
    					        .then(function (player) {

    					            // Notify anybody watching the development environment
        					        FoodLantern.notify('Logging in ' + request.session.player.email);
        					        
        					        // Redirect the now logged in player to their dashboard
        							response.location('/dashboard');
        							response.redirect('/dashboard');

        				        }, console.log);

                        }, console.log);

                // Upon failure to validate credentials, set a session error and redirect to the login page
                }, function () {

                    // Notify anybody watching the development environment
                    request.session.loginError = 'Invalid username or password';

                    FoodLantern.notify('Error logging somebody in with the email ' + request.body.email);
                    response.location('/login');
					response.redirect('/login');

                });
            
        };
        
        /***!Process Registration Attept
         *  POST "/register"
         * Validate the supplied credentials and save them to the
         * database for the new player.
         * Valid new credentials will automatically log the player
         * into the site.
         * Invalid credentials or missing information errors will
         * result in redirection back to the register page along
         * with the appropriate message.
         */
        this.registerAttempt = function (request, response) {
            
            // Ensure that the email and password variables are not empty
            if (request.body.email.toString().trim() === '' || request.body.password.toString().trim() === '') {

                // Empty required variables results in a message and redirection back
                FoodLantern.notify('missing elements');
                request.session.loginError = 'You need to provide both an email address and password.';
				response.location('/register');
				response.redirect('/register');

            } else {
            
                // Capture any player that has the email address
                FoodLantern.players.captureByEmail(request.body.email)
                    .then(function (playerData) {

                        // If the playerData is not null, there is an already existing player
                        if (playerData) {
                        
                            // Return the appropriate message to the register page
                            request.session.loginError = 'There is already a registration with that email.';
    						response.location('/register');
            				response.redirect('/register');
            				
                        // If the playerData is empty or null, there is no existing player with that email
                        } else {
                        
                            // Create the base player data object manually to ensure that no extra elements are submitted (like is_admin)
                            playerData = {
                			    given_name :    request.body.given_name,
                			    family_name:    request.body.family_name,
                			    email:          request.body.email,
                			    password:       request.body.password
                		    };
				    
                            // Create a new player using the data
        				    FoodLantern.players.createNew(playerData)
        				        
        				        // Since when creating a new player, if there was no _id provided,
        				        // it saves you can move to the next step
        			            .then(function (player) {

        			                // Create a session for the new registered member
        			                FoodLantern.players.createSession(request, player)
        			                
        			                    // Redirect the new member to their dashboard not thay they've logged in too
        				                .then(function (player) {
        				                
        				                    // Notify anybody watching the development environment
            				                FoodLantern.notify('Player created, redirecting to dashboard');
            						        response.location('/dashboard');
                							response.redirect('/dashboard');

            					        }, console.log);

        			            }, console.log);

                        }

                    }, console.log);
            }
        };
        
        this.initialize();
        
    };
    
    HTTPRoutes = new HTTPRoutes();
    
}());

module.exports = HTTPRoutes;
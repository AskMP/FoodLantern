var APILanternsRoutes,
    Q           = require('q');

(function () {
    "use strict";
    
    // Setup a local variable for the FoodLantern reference
    var FoodLantern = null;
    
    APILanternsRoutes = function () {
        
        // Setup the JSON response variable that will contain our class
        var JSONResponse = null;
        
        // Setup the local variable upon loading the module
        this.initialize = function () {
            
            // Need to go 2 levels up since this is a sub-module of the HTTPServer
            FoodLantern = module.parent.parent.exports;
            
            // Stand-alone JSON response class
            JSONResponse = require('../classes/foodlantern.response');
            
        };
        
        this.listActive = function (request, response) {
            
            var games;

            // Create the response object
            response = new JSONResponse(request, response);
            
            if (!request.session.player) {
                response.errorResponse('Must be logged in', 832);
            } else if (!request.session.player.game) {
                response.errorResponse('Must join a game before searching for recipes', 833);
            } else {
                games = FoodLantern.games.findById(request.session.player.game);
                games[0].listLanterns()
                    .then(function (activeLanterns) {
                        response.result = activeLanterns;
                        response.render();
                    }, console.log);

            }

        };
        
        /***!Retrieve specific game(s)
         *  GET /api/games/:_ids
         * @params  String:_ids     The requested ID(s)
         * @return  Array   An array of matching active games and their lanterns
         *
         * Note:    Games list method will likely change in the future to only
         *          show basic game details and not arrays of sub-objects.
         *          The full game data will only be return when joining a game.
         */
        this.getById = function (request, response) {
            
            var games;
            
            // Create the response object
            response = new JSONResponse(request, response);
            
            // Set the result to the array returned in the games model find method
            games = FoodLantern.games.findById(request.session.player.game);
            games[0].lanternsById(request.params._id)
                .then(function (foundLanterns) {
                        response.result = foundLanterns;
                        response.render();
                    }, console.log);
        };
        
        this.initialize();
        
    };
    
    APILanternsRoutes = new APILanternsRoutes();
    
}());

module.exports = APILanternsRoutes;
/*jslint nomen: true */
/*globals require, module, console*/
var Recipe,
    Q = require('q');

(function () {
    "use strict";
    
    var FoodLantern;
    
    Recipe = function (recipeData) {
    
        recipeData = recipeData || {};
        
        var self = this;

        this._id            = '';
        this.game_id        = '';
        this.name           = '';
        this.snippet        = '';
        this.description    = '';
        this.image_uri      = '';
        this.resources      = [];
        
        this.initialize = function (recipeData) {
        
            recipeData = recipeData || {};
            
            FoodLantern = module.parent.parent.parent.exports;
            
            recipeData = JSON.parse(JSON.stringify(recipeData));
            
            for (var d in recipeData) {
                if (self.hasOwnProperty(d) && recipeData.hasOwnProperty(d)) {
                    self[d] = recipeData[d];
                }
            }

            return self;

        };
        
        this.save = function () {
            var deferred = Q.defer(),
            
                newData = {
                    game_id         : self.game_id,
                    name            : self.name,
                    description     : self.description,
                    snippet         : self.snippet,
                    image_uri       : self.image_uri,
                    resources       : self.resources
                };
            
            if (self._id === '') {
                
                FoodLantern.MongoServer.models.recipe.create(newData, function (err, newRecipe) {
                    if (err) {
                        console.log(err)
                    } else {
                        self._id = newRecipe._id;
                    }
                    
                    deferred.resolve(self);
                    
                }, console.log);
                
            } else {
                
                FoodLantern.MongoServer.models.recipe.update({ _id : self._id }, { $set : newData }, function (err, numberAffected, raw) {
                    if (err) {
                        console.log(err);
                    }

                    // return the recipe data
                    deferred.resolve(self);

                }, console.log);
                
            }
            
            return deferred.promise;
        };
        
        this.initialize(recipeData);
    };
    
}());

module.exports = Recipe;
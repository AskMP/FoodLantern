/*jslint nomen: true */
/*globals require, module, console*/
var Player,
    Q = require('q');

(function () {
    "use strict";
    
    var FoodLantern; // Global object assigned to the prime
    
    Player = function (playerData) {
        
        var self        = this,
            socket      = null,
            socketID    = null;
        
        this._id            = "";
        this.given_name     = "";
        this.family_name    = "";
        this.email          = "";
        this.password       = null;
        this.status         = 1;
        this.is_admin       = -1;
        this.resources      = [];
        
        this.initialize = function (playerData) {
            playerData = playerData || {};
            var d;

            FoodLantern = module.parent.parent.exports;
            
            playerData = JSON.parse(JSON.stringify(playerData));
            
            for (d in playerData) {
                if (playerData.hasOwnProperty(d) && self.hasOwnProperty(d)) {
                    self[d] = playerData[d];
                }
            }
            
            return self;
            
        };
        
        this.save = function () {
            var deferred = Q.defer(),
                newData = {
                    given_name      : self.given_name,
                    family_name     : self.family_name,
                    email           : self.email,
                    status          : self.status,
                    is_admin        : self.is_admin,
                    score           : self.score,
                    resources       : self.resources
                };
                
            if (self._id === '') {
                
                newData.password = self.password;
                
                FoodLantern.MongoServer.models.player.create(newData, function (err, newPlayer) {
                    if (err) {
                        console.log(err);
                    } else {
                        self._id = newPlayer._id;
                    }
                    
                    deferred.resolve(self);
                    
                });
            } else {
                
                FoodLantern.MongoServer.models.player.update({_id: self._id}, newData).exec()
                    .then(function (err, numberAffected, raw) {
                        if (err) {
                            console.log(err);
                        }
                        deferred.resolve(self);
                    }, console.log);
                
            }
            
            return deferred.promise;
        };
        
        this.initialize(playerData);
        
    };
    
}());

module.exports = Player;